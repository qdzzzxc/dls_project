from typing import List

from langchain.chains.base import Chain
from langchain.llms import BaseLLM
from langchain_core.prompts import ChatPromptTemplate

from .deepinfra import ChatDeepInfra

llm = ChatDeepInfra(temperature=0.7)


class Mixtral(Chain):
    """usage of Mixtral moel"""

    conversation_system_postprompt_template = [
        (
            "system",
            """Отвечай только на русском языке, исключая любые другие языки. Если твой ответ содержит другой язык, переведи его на русский.
Пиши только русскими буквами. Это правило не распространяется на название книги.
""",
        )
    ]

    @property
    def input_keys(self) -> List[str]:
        return []

    @property
    def output_keys(self) -> List[str]:
        return []

    def reviews_summary(self, header, description, reviews):
        base_text = """Твоя задача это сжать представленные ниже текста, сжать их и предоставить ответ в виде обзора на книгу. 
        Сначала должен быть краткий пересказ сюжета книги или иной информации о ней, которая предоставлен в первом тексте. 
        Если присутствуют другие текста, то нужно извлечь из них информацию о впечатлениях людей, плюсах и минусах книги. \
        Если же нет текстов, предоставляющих эту информацию, то и писать об этом не нужно. 
        Если информация встречается в нескольких текстах, игнорируй это.
        
        Дальше следуют текста, которые необходимо использовать для ответа:"""
        base_text += f"Данная информация является точно правдивой. Используй её только, если она нужна.\n{header} \nТекст один:\n{description}"

        nums = ["два", "три", "четыре"]

        for i, review in enumerate(reviews):
            if review:
                base_text += f"\nТекст {nums[i]}:\n{review}\n"

        base_text += """\nТвой ответ должен выглядеть как обзор на книгу. Не нужно указывать информацию о том, кто написал цитируемый тобой фрагмент или откуда он взят. 
        Не должно быть никаких указаний на то, что ты используешь отзывы других людей, для написания этого текста"""

        messages = self.conversation_system_postprompt_template + [("user", base_text)]

        template = ChatPromptTemplate.from_messages(messages).format_messages()

        response = llm.invoke(template)
        return response

    def text_normalization(self, user_input):
        normalization_promt = """Твоя задача это исправить ошибки в тексте и вернуть ТОЛЬКО исправленный вид. 
        Текст состоит из имени автора и названия произведения, всю иную информацию необходимо удалить.
        Отвечай только на русском языке. Если твой ответ содержит английский язык, переведи его на русский.
        Пиши только русскими буквами.

        Ошибки могут быть нескольких типов. 
        Первый тип - неправильное написание слов
        Примеры

        Ввод пользователя: написнаие 
        Твой ответ: написание

        Ввод пользователя: оxхотттник 
        Твой ответ: оxотник

        Ввод пользователя: аблока 
        Твой ответ: облока

        Второй тип - использование чисел для написания слов
        Примеры

        Ввод пользователя пользователя: 4то  это т4к0е 
        Твой ответ: что это такое

        Ввод пользователя: пp1вет 
        Твой ответ: привет

        Ввод пользователя: 3k@териHа 
        Твой ответ: Екатерина

        Третий тип - слеплевание инициалов с фамилиями и оброзение фамилий людей
        Примеры

        Ввод пользователя: с.михалко 
        Твой ответ: С. Михалков

        Ввод пользователя: н.  Степнв 
        Твой ответ: Н. Степанов

        Ввод пользователя: М..крскова 
        Твой ответ: М. курскова

        При появлении слов, которые не несут никакого смысла и не могут быть исправлены, необходимо удалить их.
        Удаления подлежат также слова, не являющиеся именем автора или названием книги.

        Примеры работы алгормитма:

        Ввод пользователя: с. михалков 4Т0 у вас стихи и сназни 
        Твой ответ: С. Михалков что у вас стихи и сказки

        Ввод пользователя: display get_masked_image embed_picture get masked ina orig 2.0 айзек азимов краткая история 
        Твой ответ: Айзек Азимов краткая история

        Ввод пользователя: библиотеka советских приключений никита филатов іражоанинперуик 
        Твой ответ: Никита Филатов гражданин поручик
        
        В итоговый ответ входит только отформатированный тобой текст и ничего иного.
        
        Формат ответа 'Имя автора название произведения'
        Ответ не может быть длиннее одной строки, а также содержать ничего, кроме имени автора и названия произведения."""

        messages = [("system", normalization_promt)] + [("user", user_input)]

        template = ChatPromptTemplate.from_messages(messages).format_messages()

        response = llm.invoke(template)
        return response

    def _call(self):
        pass

    @classmethod
    def from_llm(cls, llm: BaseLLM, verbose: bool = False, **kwargs) -> "Mixtral":
        """Initialize the Mixtral Controller."""

        return cls(
            verbose=verbose,
            **kwargs,
        )
