from typing import List

from langchain.chains.base import Chain
from langchain.llms import BaseLLM
from langchain_core.prompts import ChatPromptTemplate

from .deepinfra import ChatDeepInfra

llm = ChatDeepInfra(temperature=0.7)


class Mixtral(Chain):
    """usage of Mixtral moel"""

    conversation_system_postprompt_template = [
        (
            "system",
            """"Отвечай только на русском языке, исключая использование всех других языков. Если в твоем ответе присутствует текст на иностранном языке, переведи его на русский.
Все ответы должны быть написаны русскими буквами. Однако, это требование не относится к оригинальным названиям книг, которые могут быть представлены на языке оригинала.""",
        )
    ]

    @property
    def input_keys(self) -> List[str]:
        return []

    @property
    def output_keys(self) -> List[str]:
        return []

    def reviews_summary(self, header, description, reviews):
        base_text = f"""Твоя задача — создать обзор на книгу, основываясь на предоставленных текстах. Начни с краткого пересказа сюжета или основной информации о книге, представленной в первом тексте. Затем, если доступны другие тексты, извлеки из них мнения людей, а также плюсы и минусы книги.

        Инструкции:
        1. Начни с краткого описания сюжета или ключевой информации о книге.
        2. Если в других текстах есть отзывы или мнения, включи информацию о впечатлениях, достоинствах и недостатках книги.
        3. Если в текстах нет информации о впечатлениях, такая информация в обзор не включается.
        4. Игнорируй повторяющуюся информацию из разных источников.
        
        Далее следуют тексты, которые необходимо использовать для составления обзора:
        
        'Эта информация является точно правдивой. Используй её только в случае необходимости. НИКОГДА не указывай ссылку на книгу.'

        Заголовок книги:
        {header}

        Текст один:
        {description}

        Примеры других текстов:"""

        nums = ["два", "три", "четыре"]

        for i, review in enumerate(reviews):
            if review:
                base_text += f"\nТекст {nums[i]}:\n{review}\n"

        base_text += """\nТвой обзор должен быть единым текстом, представленным как независимый обзор. 
        Не включай в текст упоминания о том, что информация взята из отзывов других людей, и не указывай НИКАКИЕ ссылки."""

        messages = self.conversation_system_postprompt_template + [("user", base_text)]

        template = ChatPromptTemplate.from_messages(messages).format_messages()

        response = llm.invoke(template)
        return response

    def text_normalization(self, user_input):
        normalization_promt = """Твоя задача — исправить ошибки в тексте и вернуть ТОЛЬКО исправленный вид текста, который должен включать только имя автора и название произведения. Удали всю лишнюю информацию. Ответ должен быть на русском языке и содержать только русские буквы.

Ошибки в тексте могут быть следующих типов:

1. Неправильное написание слов:
   - Пример: "написнаие" -> "написание"
   - Пример: "оxхотттник" -> "оxотник"
   - Пример: "аблока" -> "облока"

2. Использование чисел вместо букв:
   - Пример: "4то это т4к0е" -> "что это такое"
   - Пример: "пp1вет" -> "привет"
   - Пример: "3k@териHа" -> "Екатерина"

3. Ошибки в инициалах и фамилиях, а также использование полных имен:
   - Пример: "с.михалко" -> "С. Михалков"
   - Пример: "н. Степнв" -> "Н. Степанов"
   - Пример: "Мария..крскова" -> "Мария Курскова"

Если в тексте есть слова, которые не несут смысла или не могут быть исправлены, удали их. Также удаляй слова, которые не относятся к имени автора или названию книги.

Примеры корректировки:

- Ввод: "с. михалков 4Т0 у вас стихи и сназни"
  Ответ: "С. Михалков что у вас стихи и сказки"

- Ввод: "display get_masked_image embed_picture get masked ina orig 2.0 айзек азимов краткая история"
  Ответ: "Айзек Азимов краткая история"

- Ввод: "библиотеka советских приключений никита филатов іражоанинперуик"
  Ответ: "Никита Филатов гражданин поручик"

Формат ответа должен быть: 'Имя автора название произведения'. Ответ должен быть представлен одной строкой и не содержать ничего кроме имени автора и названия произведения.
"""

        messages = [("system", normalization_promt)] + [("user", user_input)]

        template = ChatPromptTemplate.from_messages(messages).format_messages()

        response = llm.invoke(template)
        return response

    def _call(self):
        pass

    @classmethod
    def from_llm(cls, llm: BaseLLM, verbose: bool = False, **kwargs) -> "Mixtral":
        """Initialize the Mixtral Controller."""

        return cls(
            verbose=verbose,
            **kwargs,
        )
